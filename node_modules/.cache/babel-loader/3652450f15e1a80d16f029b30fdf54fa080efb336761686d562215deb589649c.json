{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Downloads\\\\exam\\\\src\\\\components\\\\cards\\\\Cards.jsx\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport Card from \"./Card\";\nimport useSound from 'use-sound';\nimport success from '../../sounds/success.mp3';\nimport victory from '../../sounds/victory.mp3';\nimport errorSFX from '../../sounds/error.mp3';\nimport beep from '../../sounds/beep.mp3';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Cards(_ref) {\n  _s();\n  let {\n    container,\n    b\n  } = _ref;\n  const [items, setItems] = useState([{\n    id: 1,\n    num: 1,\n    img: '../assets/01.png',\n    status: ''\n  }, {\n    id: 2,\n    num: 1,\n    img: '../assets/01.png',\n    status: ''\n  }, {\n    id: 3,\n    num: 2,\n    img: '../assets/02.png',\n    status: ''\n  }, {\n    id: 4,\n    num: 2,\n    img: '../assets/02.png',\n    status: ''\n  }, {\n    id: 5,\n    num: 3,\n    img: '../assets/03.png',\n    status: ''\n  }, {\n    id: 6,\n    num: 3,\n    img: '../assets/03.png',\n    status: ''\n  }, {\n    id: 7,\n    num: 4,\n    img: '../assets/04.png',\n    status: ''\n  }, {\n    id: 8,\n    num: 4,\n    img: '../assets/04.png',\n    status: ''\n  }, {\n    id: 9,\n    num: 5,\n    img: '../assets/05.png',\n    status: ''\n  }, {\n    id: 10,\n    num: 5,\n    img: '../assets/05.png',\n    status: ''\n  }, {\n    id: 11,\n    num: 6,\n    img: '../assets/06.png',\n    status: ''\n  }, {\n    id: 12,\n    num: 6,\n    img: '../assets/06.png',\n    status: ''\n  }, {\n    id: 13,\n    num: 7,\n    img: '../assets/07.png',\n    status: ''\n  }, {\n    id: 14,\n    num: 7,\n    img: '../assets/07.png',\n    status: ''\n  }, {\n    id: 15,\n    num: 8,\n    img: '../assets/08.png',\n    status: ''\n  }, {\n    id: 16,\n    num: 8,\n    img: '../assets/08.png',\n    status: ''\n  }].slice(0, b).sort(() => Math.random() - 0.5));\n  const [move, setMove] = useState(0);\n  const [prevEl, setPrevEl] = useState(-1);\n  const [count, setCount] = useState(0);\n  const [win, setWin] = useState('');\n  const [beepSfx] = useSound(beep);\n  const [errorSfx] = useSound(errorSFX);\n  const [succesSfx] = useSound(success);\n  const [victorySfx] = useSound(victory, {\n    volume: 0.5\n  });\n  const [sec, setSec] = useState(0);\n  useEffect(() => {\n    const time = setTimeout(() => {\n      setSec(sec + 1);\n    }, 1000);\n  }, [sec]);\n  function check(current) {\n    if (items[current].num === items[prevEl].num && items[current].id !== items[prevEl].id) {\n      items[current].status = 'bingo';\n      items[prevEl].status = 'bingo';\n      succesSfx();\n      setCount(count + 2);\n      setItems([...items]);\n      setPrevEl(-1);\n      if (count === b - 2) {\n        setWin(' win');\n        victorySfx();\n      }\n    } else {\n      items[current].status = 'uncorrect';\n      items[prevEl].status = 'uncorrect';\n      errorSfx();\n      setItems([...items]);\n      setTimeout(() => {\n        items[current].status = '';\n        items[prevEl].status = '';\n        setItems([...items]);\n        setPrevEl(-1);\n      }, 1000);\n    }\n  }\n  function handleClick(id) {\n    if (items[id].status === 'bingo') {\n      return;\n    }\n    setMove(move + 1);\n    if (prevEl === -1) {\n      items[id].status = 'active';\n      beepSfx();\n      setItems([...items]);\n      setPrevEl(id);\n    } else {\n      check(id);\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"count\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: [\"moves: \", move]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 31\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [\"time: \", sec]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 58\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: container,\n      children: items.map((item, index) => /*#__PURE__*/_jsxDEV(Card, {\n        item: item,\n        id: index,\n        handleClick: handleClick\n      }, item.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 16\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal\" + win,\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Congratulation. You win!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 41\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 10\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 7\n  }, this);\n}\n_s(Cards, \"zvkFdA3fh3Zn9cMHdgVY2QJGywc=\", false, function () {\n  return [useSound, useSound, useSound, useSound];\n});\n_c = Cards;\nexport default Cards;\nvar _c;\n$RefreshReg$(_c, \"Cards\");","map":{"version":3,"names":["useState","useEffect","Card","useSound","success","victory","errorSFX","beep","Cards","container","b","items","setItems","id","num","img","status","slice","sort","Math","random","move","setMove","prevEl","setPrevEl","count","setCount","win","setWin","beepSfx","errorSfx","succesSfx","victorySfx","volume","sec","setSec","time","setTimeout","check","current","handleClick","map","item","index"],"sources":["C:/Users/User/Downloads/exam/src/components/cards/Cards.jsx"],"sourcesContent":["import {useState, useEffect} from \"react\";\r\nimport Card from \"./Card\";\r\nimport useSound from 'use-sound';\r\nimport success from '../../sounds/success.mp3';\r\nimport victory from '../../sounds/victory.mp3';\r\nimport errorSFX from '../../sounds/error.mp3';\r\nimport beep from '../../sounds/beep.mp3';\r\n\r\nfunction Cards ({container, b}) {\r\n   const [items, setItems] = useState([\r\n      {id: 1, num: 1, img: '../assets/01.png', status: ''},\r\n      {id: 2, num: 1, img: '../assets/01.png', status: ''},\r\n      {id: 3, num: 2, img: '../assets/02.png', status: ''},\r\n      {id: 4, num: 2, img: '../assets/02.png', status: ''},\r\n      {id: 5, num: 3, img: '../assets/03.png', status: ''},\r\n      {id: 6, num: 3, img: '../assets/03.png', status: ''},\r\n      {id: 7, num: 4, img: '../assets/04.png', status: ''},\r\n      {id: 8, num: 4, img: '../assets/04.png', status: ''},\r\n      {id: 9, num: 5, img: '../assets/05.png', status: ''},\r\n      {id: 10, num: 5, img: '../assets/05.png', status: ''},\r\n      {id: 11, num: 6, img: '../assets/06.png', status: ''},\r\n      {id: 12, num: 6, img: '../assets/06.png', status: ''},\r\n      {id: 13, num: 7, img: '../assets/07.png', status: ''},\r\n      {id: 14, num: 7, img: '../assets/07.png', status: ''},\r\n      {id: 15, num: 8, img: '../assets/08.png', status: ''},\r\n      {id: 16, num: 8, img: '../assets/08.png', status: ''},\r\n   ].slice(0, b).sort(() => Math.random() - 0.5));\r\n\r\n   const [move, setMove] = useState(0);\r\n   const [prevEl, setPrevEl] = useState(-1);\r\n   const [count, setCount] = useState(0);\r\n   const [win, setWin] = useState('');\r\n   const [beepSfx] = useSound(beep);\r\n   const [errorSfx] = useSound(errorSFX);\r\n   const [succesSfx] = useSound(success);\r\n   const [victorySfx] = useSound(victory, { volume: 0.5 });\r\n   const [sec, setSec] = useState(0);\r\n   \r\n   useEffect(() => {\r\n      const time = setTimeout(() => {\r\n         setSec(sec + 1);\r\n         }, 1000);\r\n   },[sec])\r\n   \r\n \r\n\r\n   \r\n   function check (current) {\r\n      if (items[current].num === items[prevEl].num && items[current].id !== items[prevEl].id ) {\r\n         items[current].status = 'bingo';\r\n         items[prevEl].status = 'bingo';\r\n         succesSfx();\r\n         setCount(count + 2);\r\n         setItems([...items]);\r\n         setPrevEl(-1);\r\n        \r\n         if (count=== (b-2)) {\r\n            setWin(' win');\r\n            victorySfx();\r\n         }\r\n      } else {\r\n         items[current].status = 'uncorrect';\r\n         items[prevEl].status = 'uncorrect';\r\n         errorSfx()\r\n         setItems([...items])\r\n         setTimeout(() => {\r\n            items[current].status = '';\r\n            items[prevEl].status = '';\r\n            setItems([...items]);\r\n            setPrevEl(-1);\r\n         }, 1000);\r\n      }\r\n   }\r\n   function handleClick (id) {\r\n      if (items[id].status === 'bingo') {\r\n         return\r\n      }\r\n      setMove(move + 1)\r\n      if (prevEl === -1) {\r\n         items[id].status = 'active';\r\n         beepSfx()\r\n         setItems([...items])\r\n         setPrevEl(id)\r\n      } else {\r\n         check(id)\r\n      }\r\n   }\r\n   return (\r\n      <div>\r\n         <p className=\"count\"><span>moves: {move}</span> <span>time: {sec}</span></p>\r\n         <div className={container}>\r\n            {items.map((item, index) => (\r\n               <Card item={item} key={item.id} id={index} handleClick={handleClick}/>\r\n            ))}\r\n         </div>\r\n         <div className={\"modal\" + win}><p>Congratulation. You win!</p></div>\r\n      </div>\r\n   )\r\n}\r\n\r\nexport default Cards"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}